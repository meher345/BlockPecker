{
  "contractName": "Counters",
  "abi": [],
<<<<<<< HEAD
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820dc0d62ced1d8205197af6b7e98acbb98bfb7e39c6b56e393b3109e9aef7f93d10029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820dc0d62ced1d8205197af6b7e98acbb98bfb7e39c6b56e393b3109e9aef7f93d10029",
  "sourceMap": "627:759:2:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "627:759:2:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../math/SafeMath.sol\";\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n",
  "sourcePath": "/Users/meher/git/blockchain/Trademarks/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
  "ast": {
    "absolutePath": "/Users/meher/git/blockchain/Trademarks/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        359
      ]
    },
    "id": 360,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 312,
=======
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058207aa308b0dcee18c9701b82268bb0f033cf0dfe8f58aaaf03ed5f3a4edd30fec00029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058207aa308b0dcee18c9701b82268bb0f033cf0dfe8f58aaaf03ed5f3a4edd30fec00029",
  "sourceMap": "627:759:2:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "627:759:2:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../math/SafeMath.sol\";\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n",
  "sourcePath": "/Users/chaitanyareddy/blockchain/Trademarks/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
  "ast": {
    "absolutePath": "/Users/chaitanyareddy/blockchain/Trademarks/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 394,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
<<<<<<< HEAD
        "absolutePath": "/Users/meher/git/blockchain/Trademarks/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 313,
        "nodeType": "ImportDirective",
        "scope": 360,
        "sourceUnit": 555,
=======
        "absolutePath": "/Users/chaitanyareddy/blockchain/Trademarks/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 395,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 637,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
        "src": "25:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 359,
        "linearizedBaseContracts": [
          359
=======
        "id": 441,
        "linearizedBaseContracts": [
          441
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
<<<<<<< HEAD
            "id": 316,
            "libraryName": {
              "contractScope": null,
              "id": 314,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 554,
              "src": "656:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$554",
=======
            "id": 398,
            "libraryName": {
              "contractScope": null,
              "id": 396,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 636,
              "src": "656:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$636",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "650:27:2",
            "typeName": {
<<<<<<< HEAD
              "id": 315,
=======
              "id": 397,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "669:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
<<<<<<< HEAD
            "id": 319,
            "members": [
              {
                "constant": false,
                "id": 318,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 319,
=======
            "id": 401,
            "members": [
              {
                "constant": false,
                "id": 400,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 401,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                "src": "1022:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 317,
=======
                  "id": 399,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1022:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 359,
=======
            "scope": 441,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "src": "683:374:2",
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 329,
=======
              "id": 411,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "Block",
              "src": "1137:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 326,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "1154:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 327,
=======
                      "id": 408,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "1154:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 409,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 318,
=======
                    "referencedDeclaration": 400,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "src": "1154:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 325,
                  "id": 328,
=======
                  "functionReturnParameters": 407,
                  "id": 410,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "nodeType": "Return",
                  "src": "1147:21:2"
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 330,
=======
            "id": 412,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 322,
=======
              "id": 404,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 321,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
=======
                  "id": 403,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "src": "1080:23:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 320,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 319,
                    "src": "1080:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "id": 402,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 401,
                    "src": "1080:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1079:25:2"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 325,
=======
              "id": 407,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
=======
                  "id": 406,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "src": "1128:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 323,
=======
                    "id": 405,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1127:9:2"
            },
<<<<<<< HEAD
            "scope": 359,
=======
            "scope": 441,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "src": "1063:112:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 341,
=======
              "id": 423,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "Block",
              "src": "1234:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 339,
=======
                    "id": 421,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 335,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "1244:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 337,
=======
                        "id": 417,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "1244:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 419,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 318,
=======
                      "referencedDeclaration": 400,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "src": "1244:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
<<<<<<< HEAD
                      "id": 338,
=======
                      "id": 420,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1262:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1244:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 340,
=======
                  "id": 422,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "nodeType": "ExpressionStatement",
                  "src": "1244:19:2"
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 342,
=======
            "id": 424,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 333,
=======
              "id": 415,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 332,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
=======
                  "id": 414,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "src": "1200:23:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 331,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 319,
                    "src": "1200:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "id": 413,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 401,
                    "src": "1200:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1199:25:2"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 334,
=======
              "id": 416,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:0:2"
            },
<<<<<<< HEAD
            "scope": 359,
=======
            "scope": 441,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "src": "1181:89:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 357,
=======
              "id": 439,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "Block",
              "src": "1329:55:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 355,
=======
                    "id": 437,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 347,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "1339:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 349,
=======
                        "id": 429,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "1339:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 431,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 318,
=======
                      "referencedDeclaration": 400,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "src": "1339:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 353,
=======
                          "id": 435,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1375:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 350,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "1356:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 351,
=======
                            "id": 432,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "1356:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 433,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 318,
=======
                          "referencedDeclaration": 400,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                          "src": "1356:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 352,
=======
                        "id": 434,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 473,
=======
                        "referencedDeclaration": 555,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                        "src": "1356:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 354,
=======
                      "id": 436,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1356:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1339:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 356,
=======
                  "id": 438,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "nodeType": "ExpressionStatement",
                  "src": "1339:38:2"
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 358,
=======
            "id": 440,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 345,
=======
              "id": 427,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 344,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
=======
                  "id": 426,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "src": "1295:23:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 343,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 319,
                    "src": "1295:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "id": 425,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 401,
                    "src": "1295:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1294:25:2"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 346,
=======
              "id": 428,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1329:0:2"
            },
<<<<<<< HEAD
            "scope": 359,
=======
            "scope": 441,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "src": "1276:108:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 360,
=======
        "scope": 442,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
        "src": "627:759:2"
      }
    ],
    "src": "0:1387:2"
  },
  "legacyAST": {
<<<<<<< HEAD
    "absolutePath": "/Users/meher/git/blockchain/Trademarks/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        359
      ]
    },
    "id": 360,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 312,
=======
    "absolutePath": "/Users/chaitanyareddy/blockchain/Trademarks/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 394,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
<<<<<<< HEAD
        "absolutePath": "/Users/meher/git/blockchain/Trademarks/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 313,
        "nodeType": "ImportDirective",
        "scope": 360,
        "sourceUnit": 555,
=======
        "absolutePath": "/Users/chaitanyareddy/blockchain/Trademarks/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 395,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 637,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
        "src": "25:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 359,
        "linearizedBaseContracts": [
          359
=======
        "id": 441,
        "linearizedBaseContracts": [
          441
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
<<<<<<< HEAD
            "id": 316,
            "libraryName": {
              "contractScope": null,
              "id": 314,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 554,
              "src": "656:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$554",
=======
            "id": 398,
            "libraryName": {
              "contractScope": null,
              "id": 396,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 636,
              "src": "656:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$636",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "650:27:2",
            "typeName": {
<<<<<<< HEAD
              "id": 315,
=======
              "id": 397,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "669:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
<<<<<<< HEAD
            "id": 319,
            "members": [
              {
                "constant": false,
                "id": 318,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 319,
=======
            "id": 401,
            "members": [
              {
                "constant": false,
                "id": 400,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 401,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                "src": "1022:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 317,
=======
                  "id": 399,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1022:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 359,
=======
            "scope": 441,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "src": "683:374:2",
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 329,
=======
              "id": 411,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "Block",
              "src": "1137:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 326,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "1154:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 327,
=======
                      "id": 408,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "1154:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 409,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 318,
=======
                    "referencedDeclaration": 400,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "src": "1154:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 325,
                  "id": 328,
=======
                  "functionReturnParameters": 407,
                  "id": 410,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "nodeType": "Return",
                  "src": "1147:21:2"
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 330,
=======
            "id": 412,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 322,
=======
              "id": 404,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 321,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
=======
                  "id": 403,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "src": "1080:23:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 320,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 319,
                    "src": "1080:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "id": 402,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 401,
                    "src": "1080:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1079:25:2"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 325,
=======
              "id": 407,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
=======
                  "id": 406,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "src": "1128:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 323,
=======
                    "id": 405,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1127:9:2"
            },
<<<<<<< HEAD
            "scope": 359,
=======
            "scope": 441,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "src": "1063:112:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 341,
=======
              "id": 423,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "Block",
              "src": "1234:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 339,
=======
                    "id": 421,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 335,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "1244:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 337,
=======
                        "id": 417,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "1244:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 419,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 318,
=======
                      "referencedDeclaration": 400,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "src": "1244:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
<<<<<<< HEAD
                      "id": 338,
=======
                      "id": 420,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1262:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1244:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 340,
=======
                  "id": 422,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "nodeType": "ExpressionStatement",
                  "src": "1244:19:2"
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 342,
=======
            "id": 424,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 333,
=======
              "id": 415,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 332,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
=======
                  "id": 414,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "src": "1200:23:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 331,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 319,
                    "src": "1200:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "id": 413,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 401,
                    "src": "1200:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1199:25:2"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 334,
=======
              "id": 416,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:0:2"
            },
<<<<<<< HEAD
            "scope": 359,
=======
            "scope": 441,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "src": "1181:89:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 357,
=======
              "id": 439,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "Block",
              "src": "1329:55:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 355,
=======
                    "id": 437,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 347,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "1339:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 349,
=======
                        "id": 429,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "1339:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 431,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 318,
=======
                      "referencedDeclaration": 400,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "src": "1339:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 353,
=======
                          "id": 435,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1375:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 350,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "1356:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 351,
=======
                            "id": 432,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "1356:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 433,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 318,
=======
                          "referencedDeclaration": 400,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                          "src": "1356:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 352,
=======
                        "id": 434,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 473,
=======
                        "referencedDeclaration": 555,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                        "src": "1356:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 354,
=======
                      "id": 436,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1356:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1339:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 356,
=======
                  "id": 438,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "nodeType": "ExpressionStatement",
                  "src": "1339:38:2"
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 358,
=======
            "id": 440,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 345,
=======
              "id": 427,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 344,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
=======
                  "id": 426,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                  "src": "1295:23:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 343,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 319,
                    "src": "1295:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$319_storage_ptr",
=======
                    "id": 425,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 401,
                    "src": "1295:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$401_storage_ptr",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1294:25:2"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 346,
=======
              "id": 428,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1329:0:2"
            },
<<<<<<< HEAD
            "scope": 359,
=======
            "scope": 441,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
            "src": "1276:108:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 360,
=======
        "scope": 442,
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
        "src": "627:759:2"
      }
    ],
    "src": "0:1387:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
<<<<<<< HEAD
  "updatedAt": "2019-07-04T17:19:22.415Z",
=======
  "updatedAt": "2019-07-13T14:36:48.179Z",
>>>>>>> d44690306c48b9425692b778dc32db0c461ab489
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "methods": {},
    "title": "Counters"
  },
  "userdoc": {
    "methods": {}
  }
}